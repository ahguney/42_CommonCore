Bitsel (bitwise) Operatörler : | , & , ^ , ~
Java Dilinde Bitsel Operatörler
Operator Adı
a & b And (ve)
a | b Or (veya)
a ^ b Xor (dışarmalı veya)
~a Not (değil)
n << p left shift (sola kayma)
n >> p right shift (sağa kayma)
n >>> p right shift (sağa p hane kayma)
Bilgisayarda int tipinden sayılar 32 bitlik (ikili sayıtlama sisteminin haneleri) bellek adresinde tutulur.
long tipi tamsayılar ise 64 bitlik bellek adresinde tutulurlar. Örneğin, 5 sayısının ikili sistemdeki temsili
101 dır. 16 sayısının temsili ise 10000 dır.
Negatif tamsayılar, ikili sistemde ikinin tümleyeni biçiminde temsil edilir. Örneğin, 4 sayısının ikili
sistemdeki temsili olan (100)2 sayısının iki tabanına göre tümleyenini bulmak için, önce onu 32 bitlik
adresine yazarız. Sonra adresteki hanelerde 1 olanları 0, 0 olanları 1 yaparız. En sonunda 2 tabanına
göre çıkan sayıya 1 ekleriz:
4 = 0000 0000 0000 0000 0000 0000 0000 0100
~4 = 1111 1111 1111 1111 1111 1111 1111 1011
 ~4 +1 = 1111 1111 1111 1111 1111 1111 1111 1100
İki tabanına göre temsilde en soldaki bit (32-inci hane) işaret bitidir. Bu hanede 1 varsa sayı negatif; 0
varsa pozitiftir. Sistem negatif sayıları yukarıdaki gibi 2 nin tümleyeni olarak belleğe yazar. Tabii,
negatif bir tamsayının ters işaretlisini bulmak için, yukarıdaki işlemlerin terslerini yapar. Bu demektir
ki -4 sayından +4 sayısını elde etmek için, önce ikili temsilinden 1 çıkarır. Çıkan sayı ~4 olacaktır. 
Bölüm 06: Operatörler 2
Buradan, her hanedeki 0 ları 1, 1 leri 0 yaparak +4 sayısını bulur.
Bitsel operatörler int ve long tipleri üzerinde işlerler. İşleme giren sayılar (operand) byte ya da
short tipinden ise, önce onlar int tipine dönüştürülür, sonra bitsel operatör uygulanır.
Aşağıdaki tablo, bitsel operatörlerin bit’ler (Bİnary digiTs - ikili sistemin haneleri) üzerinde etkisini
göstermektedir. a ve b iki sayı ise, karşılıklı bitlerindeki etki şöyledir:
a b a | b a & b a ^ b ~a
0 0 0 0 0 1
1 0 1 0 1 0
0 1 1 0 1 1
1 1 1 1 0 0
Örnek 1:
a b a | b a & b a ^ b ~a
00101010 00001111 00101111 00001010 00100101 11010101
42 15 47 10 37 -43
Örnek 2:
İşlem Sonuç Açıklama
3 & 5 1 (0011) & (0101) = 0001
3 | 5 7 (0011) | (0101) = 0111
3 ^ 5 6 (0011) ^ (0101) = 0110
~3 -4 ~(0011) = 1100 => -4 (En soldaki bit işaret bitidir.)
3 <<< 2 12 3 = 0011 sayısının bütün bitleri 2 hane sola kayıyor. Sağda boşalan haneler yerine 0 konuluyor.
5 >> 2 1 0101 >> 2 ==> 0001
-4 >>> 28 15 Shifts the bits of n right p positions. Zeros are shifted into the high-order positions.
public class Bitsel01 {
public static void main(String[] args) {
byte a = 42;
byte b = 15;
System.out.println(a | b);
System.out.println(a & b);
Bölüm 06: Operatörler 3
System.out.println(a ^ b);
System.out.println( ~ a);
System.out.println(42 << 2);
}
}
Çıktı:
47
10
37
-43
168
BitselNOT02.java
public class BitselNOT02 {
 public static void main(String[] a) {
 int i = 1;
 System.out.println(i);
 int j = ~i + 1;
 System.out.println(j);
 i = ~j + 1;
 System.out.println(i);
 }
}
Çıktı:
1
-1
1
BitwiseNOT.java
class BitwiseNOT{
 public static void main(String args[]){
 System.out.println(" ~ NOT operatörü");
 System.out.println("~ 1 = " + ~1);
 System.out.println("~ 5 = " + ~5);
 }
}
Çıktı:
~NOT Operatörü
~1= -2
~5 = -6
BitselAtama.java
public class BitselAtama {
 public static void main(String args[]) {
 int a = 1;
 int b = 2;
 int c = 3;
 a |= 4;
Bölüm 06: Operatörler 4
 b >>= 1;
 c <<= 1;
 a ^= c;
 System.out.println("a = " + a);
 System.out.println("b = " + b);
 System.out.println("c = " + c);
 }
}
Çıktı:
a = 3
b = 1
LeftShift01.java
// byte tipi sayının sola kayması.
public class LeftShift01 {
public static void main(String[] args) {
byte a = 64, b;
int i;
i = a << 2;
b = (byte) (a << 2);
System.out.println("a nın asıl değeri : " + a);
System.out.println("(a << 2) değeri : " + (a << 2));
System.out.println("(byte)(a << 2) değeri : " + (byte)(a << 2));
}
}
Çıktı:
a nın asıl değeri : 64
(a << 2) değeri : 256
(byte)(a << 2) değeri : 0
LeftShift02.java
public class LeftShift02 {
public static void main(String[] args) {
int i;
int num = 0xFFFFFFE;
System.out.println(num);
for (i = 0; i < 4; i++) {
num = num << 1;
System.out.println(num);
}
}
}
Bölüm 06: Operatörler 5
Çıktı:
268435454
536870908
1073741816
2147483632
-32
http://www.baskent.edu.tr/~tkaracay/etudio/ders/prg/java/ch06/bitwiseOperators.pdf